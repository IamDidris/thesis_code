This C program implements a virtual piano that plays audio samples when keys on a computer keyboard are pressed. It uses the X11 library to capture keyboard events and PortAudio for audio playback. Each piano note corresponds to a WAV file stored in a samples/ directory, which is loaded at startup. The piano supports 84 notes, and each note’s sound data is stored in memory.

When a key is pressed, the corresponding note’s audio sample begins playing from the start. If the key is released, the note fades out smoothly. Key mappings from keyboard keycodes to piano notes are defined, and modifiers like Shift and Control keys can shift the note range up or down.

The program provides two visual output modes: a simple list of pressed note names (-onotes) or a stylized ASCII-art music sheet (-osheet) displaying note positions. Audio mixing is handled in a callback that plays multiple notes simultaneously, mixing and fading them as needed.

The main function initializes the piano system, sets up audio and keyboard input, and enters a loop to process key events. When the Escape key is pressed, the program exits gracefully, releasing all resources.

Overall, the program creates an interactive, real-time software piano with audio playback and visual feedback using standard C libraries and system-level APIs.